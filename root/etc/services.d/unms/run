#!/usr/bin/with-contenv sh

export HOME=/home/app
export HTTP_PORT=8081
export WS_PORT=8082
export WS_SHELL_PORT=8083
export UNMS_RABBITMQ_HOST=localhost
export UNMS_RABBITMQ_PORT=5672
export UNMS_REDISDB_HOST=localhost
export UNMS_REDISDB_PORT=6379
export UNMS_PG_HOST=localhost
export UNMS_PG_PORT=5432
export UNMS_PG_USER=unms
export UNMS_PG_PASSWORD=unms
export UNMS_PG_SCHEMA=unms
export UNMS_FLUENTD_HOST=localhost
export UNMS_FLUENTD_PORT=8081
export UNMS_NGINX_HOST=localhost
export UNMS_NGINX_PORT=12345
export UCRM_PG_USER=ucrm
export UCRM_PG_SCHEMA=ucrm
export UCRM_PG_PASSWORD=ucrm
export NODE_ENV=production

# wait for postgres to come up
until pg_isready; do
  echo "Waiting for postgres to come up..."
  sleep 1
done

# Create postgres database if it does not exist
psql -U postgres -lqt | cut -d \| -f 1 | grep -qw $POSTGRES_DB
if [ $? -ne 0 ]; then
  echo "Creating database..."
  
  createdb -U postgres -O postgres $POSTGRES_DB
  # Create user unms
  psql -U postgres -d $POSTGRES_DB -c "CREATE USER $UNMS_PG_USER SUPERUSER PASSWORD '$UNMS_PG_PASSWORD'"
  psql -U postgres -d unms -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO $UNMS_PG_USER"
  
  # Create user ucrm
  psql -U postgres -d $POSTGRES_DB -c "CREATE USER $UCRM_PG_USER SUPERUSER PASSWORD '$UCRM_PG_PASSWORD'"
  psql -U postgres -d $POSTGRES_DB -c "GRANT ALL PRIVILEGES ON DATABASE $POSTGRES_DB TO $UCRM_PG_USER"
  
  # Rename schema public to unms
  psql -U postgres -d $POSTGRES_DB -c "ALTER SCHEMA public RENAME TO $UNMS_PG_SCHEMA"
  
  # Create new schemas
  psql -U postgres -d $POSTGRES_DB -c "CREATE SCHEMA IF NOT EXISTS public"
  psql -U postgres -d $POSTGRES_DB -c "CREATE SCHEMA IF NOT EXISTS $UCRM_PG_SCHEMA"
  
  # Change search paths
  psql -U postgres -d $POSTGRES_DB -c "ALTER USER $UNMS_PG_USER SET search_path = $UNMS_PG_SCHEMA,public"
  psql -U postgres -d $POSTGRES_DB -c "ALTER USER $UCRM_PG_USER SET search_path = $UCRM_PG_SCHEMA,public"
  
  # Change schema owners
  psql -U postgres -d $POSTGRES_DB -c "ALTER SCHEMA $UNMS_PG_SCHEMA OWNER TO $UNMS_PG_USER"
  psql -U postgres -d $POSTGRES_DB -c "ALTER SCHEMA $UCRM_PG_SCHEMA OWNER TO $UCRM_PG_USER"
  
  #UCRM views
  psql -U postgres -d $POSTGRES_DB -c "CREATE VIEW crm_db_version_view AS SELECT character varying(500) '0.14.2' as value"
  psql -U postgres -d $POSTGRES_DB -c "ALTER VIEW crm_db_version_view OWNER TO $UCRM_PG_USER"
  psql -U postgres -d $POSTGRES_DB -c "CREATE VIEW crm_permission_group_view AS select uuid '00000000-0000-0000-0000-000000000000' as id, character varying(250) '0' as name"
  psql -U postgres -d $POSTGRES_DB -c "ALTER VIEW crm_permission_group_view OWNER TO $UCRM_PG_USER"
  
  
fi

if [ "$QUIET_MODE" = "1" ]; then
  echo "Starting UNMS in quiet mode..."
  cd /home/app/unms
  s6-setuidgid root docker-entrypoint.sh npm start >> /config/unms/logs/unms.log 2>&1

  printf "\n\nUNMS exited, last 100 lines of log:\n\n"
  tail -n 100 /config/unms/logs/unms.log
else
  cd /home/app/unms
  s6-setuidgid root docker-entrypoint.sh npm start 2>&1  | tee -a /config/unms/logs/unms.log
fi
